"""
Work with Spotify API.
"""
import json
import base64
import pycountry
from requests import post, get

CLIENT_ID='af650555f3444a9ba1c3af5ae28fa6a3'
CLIENT_SECRET='e654272fdcbf4b51b777b62b48805d32'

def get_token():
    """
    Get token out of client ID and client secret.
    """
    auth_code = f'{CLIENT_ID}:{CLIENT_SECRET}'
    auth_bytes = auth_code.encode('utf-8')
    auth_base64 = str(base64.b64encode(auth_bytes), 'utf-8')
    auth_url = 'https://accounts.spotify.com/api/token'
    auth_data = {'grant_type': 'client_credentials'}
    auth_headers = {'Authorization': 'Basic ' + auth_base64,
               'Content-Type': 'application/x-www-form-urlencoded'}
    result = post(auth_url, headers = auth_headers, data = auth_data)
    json_result = json.loads(result.content)
    token = json_result['access_token']
    return token

def get_auth_header(token):
    """
    Get authorization header.
    """
    return {'Authorization': 'Bearer ' + token}

def search_for_artist(token, artist_name):
    """
    Search for an artist`s name and ID.
    >>> search_for_artist(get_token(), 'Harry Styles')[0]
    'Harry Styles'
    >>> search_for_artist(get_token(), 'Harry Styles')[1]
    '6KImCVD70vtIoJWnq6nGn3'
    """
    artist_url = 'https://api.spotify.com/v1/search'
    artist_headers = get_auth_header(token)
    query = f'?q={artist_name}&type=artist&limit=1'
    query_url = artist_url + query
    result = get(query_url, headers = artist_headers)
    json_result = json.loads(result.content)['artists']['items']
    if len(json_result) == 0:
        return None
    return json_result[0]['name'], json_result[0]['id']

def get_most_popular_song(token, artist_name):
    """
    Search for a name and ID of the most popular song of an artist.
    >>> get_most_popular_song(get_token(), 'Harry Styles')[0]
    'As It Was'
    """
    artist_id = search_for_artist(token, artist_name)[1]
    song_url = f'https://api.spotify.com/v1/artists/{artist_id}/top-tracks?country=US'
    song_headers = get_auth_header(token)
    result = get(song_url, headers = song_headers)
    json_result = json.loads(result.content)['tracks']
    return json_result[0]['name'], json_result[0]['id']

def get_track_country_list(token, artist_name):
    """
    Get a list of countries where the most popular artist`s song
    is available to listen.
    >>> get_track_country_list(get_token(), 'Harry Styles')[:5]
    ['Argentina', 'Australia', 'Austria', 'Belgium', 'Bolivia']
    """
    track_id = get_most_popular_song(token, artist_name)[1]
    track_url = f'https://api.spotify.com/v1/tracks/{track_id}'
    track_headers = get_auth_header(token)
    result = get(track_url, headers = track_headers)
    json_result = json.loads(result.content)
    country_list = json_result['available_markets']
    new_country_list = []
    for country in country_list:
        country = pycountry.countries.get(alpha_2=country)
        if country is None:
            continue
        if ',' in country.name:
            country_name = country.name.split(',')[0]
        else:
            country_name = country.name
        new_country_list.append(country_name)
    return new_country_list

token = get_token()
artist_input = input('Enter artist name:\n>>> ')
try:
    while True:
        info_input = input('What info would you like to see?\n(artist name, artist ID, most popular track, available market)\nType exit to stop the program.\n>>> ')
        if info_input.upper() == 'ARTIST NAME':
            print(f'Artist name: {search_for_artist(token, artist_input)[0]}')
        elif info_input.upper() == 'MOST POPULAR TRACK':
            print(f'Most popular track: {get_most_popular_song(token, artist_input)[0]}')
        elif info_input.upper() == 'ARTIST ID':
            print(f'Artist ID: {search_for_artist(token, artist_input)[1]}')
        elif info_input.upper() == 'AVAILABLE MARKET':
            print(f'Available market for the track: {get_track_country_list(token, artist_input)}')
        elif info_input.upper() == 'EXIT':
            break
        else:
            print('Command not found')
        print('\n')
except TypeError:
    print('Error occured. No such artist found')

if __name__ == "__main__":
    import doctest
    print(doctest.testmod())
